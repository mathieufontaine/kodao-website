---
import Button from "../common/Button.astro";

export interface Props {
  title: string;
  heading: string;
  image: string;
  description?: string;
  btnHref?: string;
  btnText?: string;
  white?: boolean;
  items?: string[];
  reversed?: boolean;
  bold?: boolean;
}

const {
  title,
  heading,
  image,
  description,
  btnHref,
  btnText,
  white,
  items,
  reversed = false,
  bold = true,
} = Astro.props;
---

<section class={`section ${white && "section--white"}`}>
  <div class="container">
    <p class="title">{title}</p>
    <h2 class="heading">{heading}</h2>
    {description && <p class="text">{description}</p>}
    <div class="flex">
      <div
        class="flex_text"
        data-aos="fade-left"
        data-aos-easing="ease-out-cubic"
        data-aos-duration="1000"
      >
        <ul class="flex_list">
          {
            items?.map((item) => (
              <li class={bold ? "flex_key flex_key--bold" : "flex_key"}>
                <i
                  class={`fa-solid ${
                    title === "concept" ? "fa-infinity" : "fa-circle-notch"
                  }`}
                />
                <p>{item}</p>
              </li>
            ))
          }
        </ul>
        {btnText && <Button btnHref={btnHref} btnText={btnText} type="flex" />}
      </div>
      <div
        class={`flex_img ${reversed && "flex_img--first"} ${
          !bold && "flex_img--big"
        }`}
        data-aos="fade-right"
        data-aos-easing="ease-out-cubic"
        data-aos-duration="1000"
      >
        <img src={image} alt={title} />
      </div>
    </div>
  </div>
</section>

<style>
  .title {
    font-size: 1.8rem;
    font-weight: 800;
    text-align: center;
    color: var(--accent-color);
    text-transform: uppercase;
    margin-bottom: 20px;
  }
  .text {
    margin-top: 20px;
    text-align: center;
  }
  .flex {
    display: flex;
    grid-gap: 20px;
    justify-content: space-around;
  }

  .flex_img {
    /* width: 40%; */
    margin: auto;
    height: 100%;
    max-height: 360px;
    max-width: 360px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .flex_img--first {
    order: -1;
  }
  .flex_img--big {
    max-width: 100%;
  }
  .flex_img img {
    object-fit: contain;
  }

  /* .flex_img:first img {
    width: 60%;
  } */

  .flex_img--mobile {
    display: none;
    padding: 20px 0;
  }
  .flex_text {
    display: flex;
    flex-direction: column;
  }

  .flex_title {
    font-weight: 500;
    font-size: 2.3rem;
  }
  .flex_list {
    list-style: none;
    margin: 20px 0;
    width: 100%;
  }

  .flex_key {
    padding: 10px 0;
    display: flex;
    gap: 15px;
  }
  .flex_key--bold p {
    font-weight: 900;
    font-size: larger;
  }

  .flex_key .fa-solid {
    padding-top: 5px;
    font-size: 1.5rem;
  }

  .flex_title .fa-solid {
    margin-right: 10px;
  }

  @media (min-width: 1600px) {
    .flex_img {
      max-height: 500px;
      max-width: 500px;
    }
  }
  @media (max-width: 615px) {
    .flex {
      flex-direction: column;
    }
    .flex_img {
      order: 1;
      width: 100%;
    }
  }
</style>
