---
export interface Props {
  btnHref: string;
  btnText: string;
  type: string;
}

const { btnHref, btnText, type } = Astro.props;
---

<a href={btnHref} class={`button button--${type}`} type="button">
  <button class="button_text">{btnText}</button>
</a>

<style>
  .button {
    display: block;
    position: relative;
    width: 260px;
    height: auto;
    font-size: 1.5rem;
    padding: 15px;
    text-align: center;
    border-radius: 12px;
    font-weight: 500;
    background: var(--accent-color);
    color: var(--secondary-color);
    cursor: pointer;
    margin: 20px auto 0;
    transition: 0.5s all ease;
    border: none;
  }

  .button:hover {
    transform: scale(110%);
    animation: none;
  }

  .button--primary {
    background: var(--primary-color);
    color: var(--secondary-color);
  }

  .button--secondary {
    background: var(--secondary-color);
    color: var(--primary-color);
  }

  .button--hero {
    background: var(--secondary-color);
    color: var(--primary-color);
  }
  .button--hero:hover {
    background: var(--accent-color);
    color: var(--secondary-color);
  }

  .button--cta {
    transform: scale(90%);
    animation: scaleIn 2.5s infinite;
  }

  .button--fixed {
    display: none;
    position: fixed;
    bottom: 5px;
    right: 5px;
    z-index: 10;
    font-size: 1.3rem;
    background-color: var(--primary-color);
    padding: 12px 15px;
    text-transform: uppercase;
    font-weight: 700;
    border-radius: 5px;
    border: 2px solid var(--secondary-color);
  }

  .button--fixed:hover {
    background-color: var(--accent-color);
    border: 2px solid var(--secondary-color);
  }

  .button--flex {
    margin-top: 20px;
  }
  .button_text {
    z-index: 2;
    position: relative;
    /* font-size: 1.8rem; */
  }
</style>
